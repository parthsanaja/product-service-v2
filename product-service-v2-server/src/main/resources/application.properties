server.port=8091
spring.data.mongodb.database=product
spring.data.mongodb.host=${MONGO_DB_HOST}
#spring.data.mongodb.host=localhost
spring.data.mongodb.port=${MONGO_DB_PORT}
## YML format for application.props to try out.
## docker compose file
## DAO concept vs. repository. mongo Template.
## BOM concept in maven
## gradle - 30 mins crash course
## r2DBC - transactional
##unit test cases.
##push to git.

## docker login
## docker build -t parthsanaja/product-service-v2 .
## docker push parthsanaja/product-service-v2
## docker run -d -p 8091:8091 --name product-service-v2 --network=dev-network parthsanaja/product-service-v2
## docker ps
## docker logs 466ca5694395
## docker stop 83d88a0b4fb7
## docker images prune
## docker container prune
## docker pull mongodb/mongodb-community-server
## docker run --name mongodb -d --rm -p 26017:27017 mongo
##docker compose up --build .
## docker compose down
